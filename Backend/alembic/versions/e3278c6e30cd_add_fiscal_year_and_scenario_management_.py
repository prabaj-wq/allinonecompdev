"""Add fiscal year and scenario management tables

Revision ID: e3278c6e30cd
Revises: 
Create Date: 2025-10-15 16:30:23.112827

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e3278c6e30cd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_custom_roles_company', table_name='custom_roles')
    op.drop_table('custom_roles')
    op.drop_table('users')
    op.drop_table('role_permissions')
    op.drop_index('idx_role_permissions_role', table_name='role_permissions_detailed')
    op.drop_table('role_permissions_detailed')
    op.drop_index('ix_hierarchies_id', table_name='hierarchies')
    op.drop_table('hierarchies')
    op.drop_index('ix_entities_id', table_name='entities')
    op.drop_table('entities')
    op.drop_table('user_roles')
    op.drop_table('companies')
    op.drop_table('role_permission')
    op.drop_index('idx_user_profiles_company_username', table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index('idx_system_integrations_company', table_name='system_integrations')
    op.drop_table('system_integrations')
    op.drop_table('roles')
    op.drop_table('permissions')
    op.drop_index('ix_accounts_id', table_name='accounts')
    op.drop_table('accounts')
    op.drop_index('idx_role_management_audit_company', table_name='role_management_audit_logs')
    op.drop_table('role_management_audit_logs')
    op.drop_index('idx_access_requests_company_status', table_name='access_requests')
    op.drop_table('access_requests')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access_requests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('request_type', sa.VARCHAR(length=50), server_default=sa.text("'page_access'::character varying"), autoincrement=False, nullable=False),
    sa.Column('requested_page', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('page_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reason', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False),
    sa.Column('requested_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('reviewed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('reviewed_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='access_requests_pkey')
    )
    op.create_index('idx_access_requests_company_status', 'access_requests', ['company_id', 'status'], unique=False)
    op.create_table('role_management_audit_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('resource', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('resource_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ip_address', postgresql.INET(), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'success'::character varying"), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('risk_level', sa.VARCHAR(length=20), server_default=sa.text("'low'::character varying"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='role_management_audit_logs_pkey')
    )
    op.create_index('idx_role_management_audit_company', 'role_management_audit_logs', ['company_id'], unique=False)
    op.create_table('accounts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('account_code', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('account_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('ifrs_category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('statement', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hierarchy_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='accounts_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey')
    )
    op.create_index('ix_accounts_id', 'accounts', ['id'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('permissions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('permission_code', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('module', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('resource', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='permissions_pkey'),
    sa.UniqueConstraint('permission_code', name='permissions_permission_code_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_system_role', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='roles_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('company_id', 'name', name='uq_company_role_name'),
    sa.UniqueConstraint('company_id', 'role_code', name='uq_company_role_code'),
    postgresql_ignore_search_path=False
    )
    op.create_table('system_integrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('connection_string', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'disconnected'::character varying"), autoincrement=False, nullable=True),
    sa.Column('health_percentage', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('last_sync', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='system_integrations_pkey'),
    sa.UniqueConstraint('name', 'company_id', name='system_integrations_name_company_id_key')
    )
    op.create_index('idx_system_integrations_company', 'system_integrations', ['company_id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('login_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('database_access', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_action', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['custom_roles.id'], name='user_profiles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_profiles_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_profiles_pkey'),
    sa.UniqueConstraint('user_id', 'company_id', name='user_profiles_user_id_company_id_key')
    )
    op.create_index('idx_user_profiles_company_username', 'user_profiles', ['company_id', 'username'], unique=False)
    op.create_table('role_permission',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='role_permission_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_permission_role_id_fkey'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='role_permission_pkey')
    )
    op.create_table('companies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('companies_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('environment_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('industry', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='companies_pkey'),
    sa.UniqueConstraint('code', name='companies_code_key'),
    sa.UniqueConstraint('name', name='companies_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_roles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_roles_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_roles_pkey'),
    sa.UniqueConstraint('user_id', 'role_id', name='uq_user_role')
    )
    op.create_table('entities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entity_code', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('entity_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('entity_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('hierarchy_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='entities_company_id_fkey'),
    sa.ForeignKeyConstraint(['parent_id'], ['entities.id'], name='entities_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='entities_pkey')
    )
    op.create_index('ix_entities_id', 'entities', ['id'], unique=False)
    op.create_table('hierarchies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('hierarchy_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('hierarchy_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='hierarchies_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='hierarchies_pkey')
    )
    op.create_index('ix_hierarchies_id', 'hierarchies', ['id'], unique=False)
    op.create_table('role_permissions_detailed',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permission_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('resource_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('parent_resource', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('permission_level', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('granted', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['custom_roles.id'], name='role_permissions_detailed_role_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='role_permissions_detailed_pkey')
    )
    op.create_index('idx_role_permissions_role', 'role_permissions_detailed', ['role_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='role_permissions_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_permissions_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='role_permissions_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='users_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('company_id', 'email', name='uq_company_user_email'),
    sa.UniqueConstraint('company_id', 'username', name='uq_company_username')
    )
    op.create_table('custom_roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('page_permissions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('database_permissions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_system_role', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_action', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('risk_level', sa.VARCHAR(length=20), server_default=sa.text("'low'::character varying"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='custom_roles_pkey'),
    sa.UniqueConstraint('name', 'company_id', name='custom_roles_name_company_id_key')
    )
    op.create_index('idx_custom_roles_company', 'custom_roles', ['company_id'], unique=False)
    # ### end Alembic commands ###