"""Add fiscal year and scenario management tables manually

Revision ID: 4febe05d8ae7
Revises: e3278c6e30cd
Create Date: 2025-10-15 16:34:01.204137

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import enum


# revision identifiers, used by Alembic.
revision: str = '4febe05d8ae7'
down_revision: Union[str, None] = 'e3278c6e30cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

class PeriodType(enum.Enum):
    MONTH = "Month"
    QUARTER = "Quarter"
    CUSTOM = "Custom"

class ScenarioType(enum.Enum):
    BASE = "Base"
    BUDGET = "Budget"
    FORECAST = "Forecast"
    WHAT_IF = "What-If"
    STRESS = "Stress"
    CUSTOM = "Custom"

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fiscal_years',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fiscal_year_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('period_type', postgresql.ENUM(PeriodType, name='periodtype'), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('is_rollup', sa.Boolean(), nullable=True),
    sa.Column('parent_period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fiscal_year_id'], ['fiscal_years.id'], ),
    sa.ForeignKeyConstraint(['parent_period_id'], ['periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fiscal_year_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('scenario_type', postgresql.ENUM(ScenarioType, name='scenariotype'), nullable=False),
    sa.Column('parent_scenario_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('tags', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['fiscal_year_id'], ['fiscal_years.id'], ),
    sa.ForeignKeyConstraint(['parent_scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scenarios')
    op.drop_table('periods')
    op.drop_table('fiscal_years')
    # ### end Alembic commands ###
